name: cbl_native_assets release

on:
  push:
    tags:
      - 'cbl_native_assets-v*'
# i.e.
# git tag cbl_native_assets-v1.0.0
# git push origin cbl_native_assets-v1.0.0

jobs:
  create-release:
    runs-on: ubuntu-22.04
    outputs:
      upload-url: ${{ steps.create-release.outputs.upload_url }}
      tag: ${{ steps.set-outputs.outputs.tag }}
      release: ${{ steps.set-outputs.outputs.release }}
    steps:
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Set outputs
        id: set-outputs
        run: |
          echo "::set-output name=tag::${GITHUB_REF/refs\/tags\//}"
          echo "::set-output name=release::${GITHUB_REF/refs\/tags\/cbl_native_assets-v/}"

  linux:
    needs: create-release
    name: Linux
    runs-on: ubuntu-22.04
    env:
      TARGET_OS: Ubuntu
    steps:
      - uses: actions/checkout@v4

      - name: Get CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Setup Flutter
        uses: subosito/flutter-action@v2

      - name: Setup Melos
        run: dart pub global activate melos

      - name: Setup CBL Dart dev tools
        run: melos run activate:cbd

      - name: Bootstrap Dart packages
        shell: bash
        run: ./tools/dev-tools.sh bootstrap

      - name: Build release
        run: |
          # Build native libraries
          ./tools/ci-steps.sh buildNativeLibraries
          
          cd packages/cbl_native_assets
          # Create asset spec
          cat > build.yaml << EOF
          targets:
            $default:
              assets:
                - lib/**
              platform:
                linux:
                  link_mode: dynamic
                  output: libcblite.so
          EOF
          
          # Package assets
          tar -czf cbl_native_assets-linux-x64.tar.gz lib/ build.yaml

      - name: Upload archives
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["./packages/cbl_native_assets/cbl_native_assets-linux-x64.tar.gz"]'

  macos-x86_64:
    needs: create-release
    name: macOS (Intel)
    runs-on: macos-14
    env:
      TARGET_OS: macOS
      MACOSX_DEPLOYMENT_TARGET: "10.15"
      DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
      SDKROOT: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2

      - name: Setup Melos
        run: dart pub global activate melos

      - name: Setup CBL Dart dev tools
        run: melos run activate:cbd

      - name: Get CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Bootstrap Dart packages
        shell: bash
        run: ./tools/dev-tools.sh bootstrap

      - name: Build release
        run: |
          # Build native libraries
          ./tools/ci-steps.sh buildNativeLibraries
          
          cd packages/cbl_native_assets
          # Create asset spec
          cat > build.yaml << EOF
          targets:
            $default:
              assets:
                - lib/**
              platform:
                macos:
                  link_mode: dynamic
                  output: libcblite.dylib
                  arch: x86_64
          EOF
          
          # Package assets
          tar -czf cbl_native_assets-macos-x64.tar.gz lib/ build.yaml

      - name: Upload archives
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["./packages/cbl_native_assets/cbl_native_assets-macos-x64.tar.gz"]'

  macos-arm64:
    needs: create-release
    name: macOS (Apple Silicon)
    runs-on: macos-14
    env:
      TARGET_OS: macOS
      MACOSX_DEPLOYMENT_TARGET: "11.0"
      DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
      SDKROOT: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2

      - name: Setup Melos
        run: dart pub global activate melos

      - name: Setup CBL Dart dev tools
        run: melos run activate:cbd

      - name: Get CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Bootstrap Dart packages
        shell: bash
        run: ./tools/dev-tools.sh bootstrap

      - name: Build release
        run: |
          # Build native libraries
          ./tools/ci-steps.sh buildNativeLibraries
          
          cd packages/cbl_native_assets
          # Create asset spec
          cat > build.yaml << EOF
          targets:
            $default:
              assets:
                - lib/**
              platform:
                macos:
                  link_mode: dynamic
                  output: libcblite.dylib
                  arch: arm64
          EOF
          
          # Package assets
          tar -czf cbl_native_assets-macos-arm64.tar.gz lib/ build.yaml

      - name: Upload archives
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["./packages/cbl_native_assets/cbl_native_assets-macos-arm64.tar.gz"]'

  windows:
    needs: create-release
    name: Windows
    runs-on: windows-2022
    env:
      TARGET_OS: Windows
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2

      - name: Setup Melos
        run: dart pub global activate melos

      - name: Setup CBL Dart dev tools
        run: melos run activate:cbd

      - name: Get CMake
        uses: lukka/get-cmake@latest

      - name: Bootstrap Dart packages
        shell: bash
        run: ./tools/dev-tools.sh bootstrap

      - name: Build release
        shell: bash
        run: |
          # Build native libraries
          ./tools/ci-steps.sh buildNativeLibraries
          
          cd packages/cbl_native_assets
          # Create asset spec
          cat > build.yaml << EOF
          targets:
            $default:
              assets:
                - lib/**
              platform:
                windows:
                  link_mode: dynamic
                  output: cblite.dll
          EOF
          
          # Package assets
          tar -czf cbl_native_assets-windows-x64.tar.gz lib/ build.yaml

      - name: Upload archives
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["./packages/cbl_native_assets/cbl_native_assets-windows-x64.tar.gz"]' 